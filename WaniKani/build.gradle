apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'

def versionMajor = 1
def versionMinor = 2
def versionPatch = 4
def versionBuild = Integer.parseInt(System.getenv('TRAVIS_BUILD_NUMBER') ?: "1")

def keystoreAlias = System.getenv('keystoreAlias') ?: project.property("wanikani.signing.upload.alias")
def keystorePassword = System.getenv('keystorePassword') ?: project.property("wanikani.signing.upload.password")

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.google.gms:google-services:3.0.0'
        classpath 'com.github.triplet.gradle:play-publisher:1.2.0'
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    playAccountConfigs {
        defaultAccountConfig {
            jsonFile = file('../xip-key.json')
        }
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        playAccountConfig = playAccountConfigs.defaultAccountConfig
    }

    signingConfigs {
        release {
            storeFile file("../keystore-upload.jks")
            storePassword keystorePassword
            keyAlias keystoreAlias
            keyPassword keystorePassword
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']   \

        }

        instrumentTest.setRoot('tests')

        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    repositories {
        maven {
            url 'https://github.com/toxbee/mvn-repo/raw/master/maven-deploy'
        }
        flatDir {
            dirs 'libs'
        }
        mavenCentral()
    }

    dependencies {
        // compile fileTree(dir: 'libs', include: '*.jar')
        compile 'com.android.support:support-v4:25.1.0'
        compile 'com.android.support:support-v13:25.1.0'
        compile 'com.android.support:appcompat-v7:25.1.0'
        compile 'com.android.support:cardview-v7:25.1.0'
        compile 'com.tonicartos:stickygridheaders:1.0.1'

        compile 'com.squareup.retrofit2:retrofit:2.1.0'
        compile "com.squareup.retrofit2:converter-gson:2.1.0"
        compile 'com.squareup.okhttp3:logging-interceptor:3.3.0'

        compile 'com.squareup.picasso:picasso:2.5.2'
        compile 'com.google.firebase:firebase-core:10.0.1'
        compile 'com.google.firebase:firebase-messaging:10.0.1'
        compile 'com.google.firebase:firebase-crash:10.0.1'

        compile files('libs/commons-io-2.4.jar')
        compile files('libs/commons-lang3-3.3.1.jar')
    }
}

play {
    track = 'alpha'
}

apply plugin: 'com.google.gms.google-services'